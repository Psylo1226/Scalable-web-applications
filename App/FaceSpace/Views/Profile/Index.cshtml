@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container mt-4">
    <!-- Nagłówek profilu -->
    <div class="d-flex align-items-center justify-content-between profile-header">
        <div class="d-flex align-items-center">
            <img id="profileAvatar" alt="Profile Avatar" class="rounded-circle border" style="width: 100px; height: 100px;" />
            <div class="ms-3">
                <h2 id="profileName"></h2>
                <p class="text-muted" id="profileDescription"></p>
            </div>
        </div>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#editProfileModal">Edit Profile</button>
    </div>

    <hr />

    <!-- Modal do edycji profilu -->
    <div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form id="editProfileForm">
                    <div class="modal-body">
                        <!-- Wybór awatara -->
                        <div class="mb-3">
                            <label class="form-label">Choose an Avatar</label>
                            <div id="avatarOptions" class="d-flex flex-wrap gap-2">
                                <!-- Opcje awatarów załadowane dynamicznie -->
                            </div>
                        </div>

                        <!-- Edycja imienia -->
                        <div class="mb-3">
                            <label for="firstName" class="form-label">First Name</label>
                            <input type="text" class="form-control" id="firstName" name="FirstName" />
                        </div>

                        <!-- Edycja nazwiska -->
                        <div class="mb-3">
                            <label for="lastName" class="form-label">Last Name</label>
                            <input type="text" class="form-control" id="lastName" name="LastName" />
                        </div>

                        <!-- Edycja opisu -->
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <textarea class="form-control" id="description" name="Description" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Sekcja z zakładkami -->
    <div class="profile-tabs mt-4">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a class="nav-link active" href="#timeline" data-bs-toggle="tab">Timeline</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" href="#friends" data-bs-toggle="tab">Friends</a>
            </li>
        </ul>
    </div>

    <div class="tab-content mt-4">
        <!-- Timeline -->
        <div class="tab-pane fade show active" id="timeline">
            <p>Timeline section coming soon...</p>
        </div>

        <!-- Friends -->
        <div class="tab-pane fade" id="friends">
            <p>Friends section coming soon...</p>
        </div>
    </div>
</div>

<script>
    const apiUrl = "https://localhost:5002";
    const userId = localStorage.getItem("userId"); // Pobierz identyfikator użytkownika
    const token = localStorage.getItem("jwtToken"); // Pobierz token JWT
    console.log("User ID:", userId);
    localStorage.setItem("userId", userIdFromLoginResponse);
    console.log("JWT Token:", token);
    localStorage.setItem("jwtToken", tokenFromLoginResponse);

        try {
        const response = await fetch(`${apiUrl}/user/${userId}`, {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
                "Authorization": `Bearer ${token}`
            },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            alert("Profile updated successfully!");
            location.reload();
        } else {
            const error = await response.json();
            console.error("API Error:", error);
            alert(`Failed to update profile: ${error.message || "Unknown error"}`);
        }
    } catch (error) {
        console.error("Error updating profile:", error);
        alert("An error occurred while updating the profile.");
    }



    async function updateProfile(event) {
            event.preventDefault(); // Zatrzymuje domyślne przesyłanie formularza

            const form = event.target; // Formularz, który wywołał zdarzenie
            const formData = new FormData(form);

            // Pobranie danych z formularza
            const profileData = {
                FirstName: formData.get("FirstName"),
                LastName: formData.get("LastName"),
                Description: formData.get("Description"),
                SelectedAvatar: formData.get("SelectedAvatar")
            };

            try {
                const response = await fetch(`${apiUrl}/user/profile`, {
                    method: "PUT",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(profileData)
                });

                if (!response.ok) {
                    throw new Error("Failed to update profile");
                }

                const result = await response.json();
                alert("Profile updated successfully");

                // Aktualizacja wyświetlania danych w nagłówku
                document.querySelector("#profileName").textContent = profileData.FirstName + " " + profileData.LastName;
                document.querySelector("#profileDescription").textContent = profileData.Description;
            } catch (error) {
                console.error("Error updating profile:", error);
                alert("An error occurred while updating the profile.");
            }
        }
</script>
