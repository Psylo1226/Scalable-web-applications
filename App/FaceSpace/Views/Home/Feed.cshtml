@using Microsoft.AspNetCore.Http
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@{
    var userId = HttpContextAccessor.HttpContext?.Request.Cookies["UserId"];
}
<div class="container mt-4">
    <!-- Feed Header -->
    <h2 class="text-center mb-4">Post Feed</h2>

    <!-- Create a New Post -->
    <div class="card mb-5 shadow-sm">
        <div class="card-body">
            <h5 class="card-title text-center">Create a Post</h5>
            <form method="POST" id="addPost">
                <div class="form-group">
                    <label for="title">Title</label>
                    <input type="text" id="title" name="title" class="form-control" required />
                </div>
                <div class="mb-3">
                    <textarea class="form-control" id="postContent" name="postContent" rows="3" placeholder="What's on your mind?"></textarea>
                </div>
                <div class="text-center">
                    <button type="button" class="btn btn-primary" onclick="submitForm()">Post</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
            async function submitForm() {
            const form = document.getElementById('addPost');
            const formData = new FormData(form);

            var id = '@userId';

            const feedPost = {
                title: formData.get('title'),
                content: formData.get('postContent'),
                userId : id
            };

            const response = await fetch('https://localhost:5003/api/Post/addPost', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(feedPost)
            });

            if (response.ok) {
                // Handle success (e.g., clear form, show success message)
                form.reset();
                alert('Post created successfully!');
            } else {
                // Handle error
                const errorText = await response.text();
                alert('Failed to create post: ' + errorText);
            }
        }

        document.getElementById('addPost').addEventListener('submit', submitForm);
    </script>
}